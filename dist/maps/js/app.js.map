{"version":3,"sources":["js/data.js","js/viewmodels/map.js","js/viewmodels/section.js","js/viewmodels/venue.js","js/viewmodels/search.js","js/viewmodels/viewmodel.js"],"names":["app","undefined","initialPOI","name","location","lat","lng","address","postalCode","url","foursquareID","tag","window","MapVM","self","this","init","mapDiv","document","getElementById","vienna","map","google","maps","Map","center","zoom","mapTypeControl","renderTransitLayer","infowindow","InfoWindow","maxWidth","renderMarkers","vm","searchVM","filteredItems","event","addDomListener","resizeMap","list","forEach","venue","marker","Marker","position","LatLng","title","animation","Animation","DROP","addListener","toggleBounceMarker","populateInfowindow","LatLngBounds","extend","transitLayer","TransitLayer","setMap","getAnimation","setAnimation","BOUNCE","setTimeout","showMarker","setVisible","hideMarker","openInfoWindow","open","closeInfoWindow","close","getAJAXdata","foursquareURL_venue","ajaxCall","$","ajax","dataType","data","client_id","client_secret","v","done","successCallback","fail","failCallback","fetchData","response","canonicalUrl","city","hours","popular","timeframes","renderedTime","buildString","htmlString","ajaxData","setContent","getCenter","trigger","setCenter","mapElem","ko","observable","mapError","mapvm","bindingHandlers","fadeVisible","element","valueAccessor","value","toggle","unwrap","update","fadeIn","fadeOut","Section","id","SectionVM","sections","observableArray","chosenSection","activateSection","section","showContent","sectionvm","Attraction","VenueVM","attractionList","utils","arrayMap","attraction","showLocation","venuevm","SearchVM","searchTerm","clearSearch","computed","filterText","toLowerCase","arrayFilter","indexOf","returnSearchItem","length","searchLabel","searchMessage","cancelBtn","showBtn","searchvm","ViewModel","mapVM","sectionVM","venueVM","applyBindings"],"mappings":"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","file":"../../js/app.js","sourcesContent":["(function(app, undefined) {\n    'use strict';\n    /**\n     * @global\n     * @description Location data set\n     */\n    app.initialPOI = [{\n            name: 'Dianabad',\n            location: {\n                lat: 48.214209,\n                lng: 16.377812\n            },\n            address: 'Lilienbrunngasse 7-9',\n            postalCode: '1020',\n            url: 'http://www.dianabad.at/',\n            foursquareID: '4c8df3ce58668cfa9a96cdec',\n            tag: ['#pirates', '#mermaids']\n        },\n        {\n            name: 'Haus des Meeres - Aqua Terra Zoo',\n            location: {\n                lat: 48.197731,\n                lng: 16.352923\n            },\n            address: 'Fritz-Grünbaum-Platz 1',\n            postalCode: '1060',\n            url: 'https://www.haus-des-meeres.at/',\n            foursquareID: '4b7cf243f964a52002aa2fe3',\n            tag: ['#marine biologists', '#crocodile hunters']\n        },\n        {\n            name: 'Haus der Musik',\n            location: {\n                lat: 48.203787,\n                lng: 16.373061\n            },\n            address: 'Seilerstätte 30',\n            postalCode: '1010',\n            url: 'http://www.hausdermusik.com/',\n            foursquareID: '4b058895f964a520f5ce22e3',\n            tag: ['#mini mozarts', '#rockstars']\n        },\n        {\n            name: 'Zoom Kindermuseum',\n            location: {\n                lat: 48.202336,\n                lng: 16.359377\n            },\n            address: 'Museumsplatz 1',\n            postalCode: '1070',\n            url: 'https://www.kindermuseum.at/en',\n            foursquareID: '4bd68e887b1876b03abf8c86',\n            tag: ['#tinkerers', '#artists'],\n        },\n        {\n            name: 'Palmenhaus Schönbrunn',\n            location: {\n                lat: 48.184550,\n                lng: 16.302921\n            },\n            address: 'Schlosspark Schönbrunn',\n            postalCode: '1130',\n            url: 'https://www.schoenbrunn.at/ueber-schoenbrunn/schlosspark/rundgang/palmenhaus/',\n            foursquareID: '4d7ce2a38f89224bcaf4ab26',\n            tag: ['#hobby gardeners', '#botanists']\n        },\n        {\n            name: 'Figurentheater Lilarum',\n            location: {\n                lat: 48.200770,\n                lng: 16.399158\n            },\n            address: 'Göllnergasse 8',\n            postalCode: '1030',\n            url: 'http://lilarum.at/',\n            foursquareID: '4b7e696cf964a52009ec2fe3',\n            tag: ['#puppeteers', '#cabaret artists']\n        },\n        {\n            name: 'Schmetterlinghaus im Burggarten',\n            location: {\n                lat: 48.205378,\n                lng: 16.366604\n            },\n            address: 'Palmenhaus Burggarten Hofburg',\n            postalCode: '1010',\n            url: 'http://www.schmetterlinghaus.at/',\n            foursquareID: '4edf58459adf1692b4aa18a1',\n            tag: ['#butterflies', '#biologists']\n        },\n        {\n            name: 'wienXtra-cinemagic Kinderkino',\n            location: {\n                lat: 48.211406,\n                lng: 16.383912\n            },\n            address: 'Uraniastrasse 1',\n            postalCode: '1010',\n            url: 'http://www.wienxtra.at/cinemagic/',\n            foursquareID: '4c9a689e971676b0de2055e2',\n            tag: ['#film critics', '#movie stars']\n        },\n        {\n            name: 'Dschungel Vienna',\n            location: {\n                lat: 48.202419,\n                lng: 16.360220\n            },\n            address: 'Museumsplatz 1',\n            postalCode: '1070',\n            url: 'https://www.dschungelwien.at/',\n            foursquareID: '4b87979af964a520acc331e3',\n            tag: ['#drama queens', '#drama kings']\n        },\n        {\n            name: 'Technisches Museum Wien',\n            location: {\n                lat: 48.190902,\n                lng: 16.318252\n            },\n            address: 'Mariahilfer Strasse 212',\n            postalCode: '1140',\n            url: 'https://www.technischesmuseum.at/',\n            foursquareID: '4b058894f964a520d5ce22e3',\n            tag: ['#engineers', '#scientists']\n        },\n        {\n            name: 'Naturhistorisches Museum',\n            location: {\n                lat: 48.205276,\n                lng: 16.359845\n            },\n            address: 'Burgring 7',\n            postalCode: '1010',\n            url: 'http://www.nhm-wien.ac.at/en',\n            foursquareID: '4b1699f8f964a520c5ba23e3',\n            tag: ['#dinosaur fans', '#history buffs']\n        }\n\n    ];\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    /**\n     * @description All Google Map methods and properties\n     * @constructor\n     */\n    var MapVM = function() {\n        var self = this;\n        self.init = function() {\n            // Map is appended to this element.\n            self.mapDiv = document.getElementById('map');\n\n            // Create google map and append it to the page\n            self.vienna = { lat: 48.2082, lng: 16.3738 };\n\n            // Creates a new map - only center and zoom are required.\n            self.map = new google.maps.Map(self.mapDiv, {\n                center: self.vienna,\n                zoom: 13,\n                mapTypeControl: false\n            });\n\n            // Add a transit layer to map\n            self.renderTransitLayer(self.map);\n\n            // Create one infowindow\n            self.infowindow = new google.maps.InfoWindow({\n                maxWidth: 300\n            });\n\n            // Create markers for each location\n            self.renderMarkers(app.vm.searchVM.filteredItems());\n\n            // Resize map, tell it to redraw when window is resized\n            google.maps.event.addDomListener(window, 'resize', self.resizeMap);\n        };\n\n        /**\n         * @description Creates map markers\n         * @param {array} list - the locations\n         *\n         */\n        self.renderMarkers = function(list) {\n            list.forEach(function(venue) {\n                // create a marker\n                var marker = new google.maps.Marker({\n                    position: new google.maps.LatLng(\n                        venue.location.lat,\n                        venue.location.lng),\n                    map: self.map,\n                    title: venue.name,\n                    animation: google.maps.Animation.DROP\n                });\n\n                // Assign marker to venue\n                venue.marker = marker;\n                marker.addListener('click', function() {\n                    self.toggleBounceMarker(this);\n                    self.populateInfowindow(this, self.infowindow, venue);\n\n                });\n\n                // Create bounds for the map based on the marker position\n                var bounds = new google.maps.LatLngBounds();\n                bounds.extend(marker.position);\n            });\n        };\n\n        /**\n         * @description Adds transit layer to map\n         * @param {object} map\n         */\n\n        self.renderTransitLayer = function(map) {\n            self.transitLayer = new google.maps.TransitLayer();\n            self.transitLayer.setMap(map);\n        };\n\n        /*\n         * @description Animates marker\n         * @param {object} marker\n         */\n        self.toggleBounceMarker = function(marker) {\n            if (marker.getAnimation() !== null) {\n                marker.setAnimation(null);\n            } else {\n                marker.setAnimation(google.maps.Animation.BOUNCE);\n                setTimeout(function() {\n                    marker.setAnimation(null);\n                }, 1500);\n            }\n        };\n\n        /**\n         * @description Sets marker to visible\n         * @param {object} marker\n         */\n        self.showMarker = function(marker) {\n            if (marker) {\n                marker.setVisible(true);\n            }\n        };\n\n        /**\n         * @description Hides marker\n         * @param {object} marker\n         */\n        self.hideMarker = function(marker) {\n            if (marker) {\n                marker.setVisible(false);\n            }\n        };\n\n        /**\n         * @description Opens infowindow\n         * @param {object} marker\n         * @param {object} map\n         */\n        self.openInfoWindow = function(map, marker) {\n            self.infowindow.open(self.map, marker);\n        };\n\n        /**\n         * @description Closes infowindow\n         */\n        self.closeInfoWindow = function() {\n            self.infowindow.close();\n        };\n\n        /**\n         * @description Makes AJAX call to Foursquare API\n         * @param {object} venue\n         */\n        self.getAJAXdata = function(venue) {\n            var foursquareClientID = 'V3SD0U1WAIJOPXUK4W2AR0DPZXUKFQQL5Y2FXKK4YO25FVX0';\n            var foursquareClientSecret = 'NEH1GYLAFDS2CL5DSBFRO3DENB55KPWAVJE5ERBWQ1MGLD0X';\n            var foursquareVersion = '20170801';\n            var foursquareURL_venue = 'https://api.foursquare.com/v2/venues/' + venue.foursquareID;\n\n            var ajaxCall = $.ajax({\n                url: foursquareURL_venue,\n                dataType: \"jsonp\",\n                data: {\n                    client_id: foursquareClientID,\n                    client_secret: foursquareClientSecret,\n                    v: foursquareVersion,\n                }\n            });\n\n            // Ajax success call\n            ajaxCall.done(function(data) {\n                self.successCallback(data);\n            });\n\n            // Ajax error call\n            ajaxCall.fail(function() {\n                self.failCallback(venue);\n            });\n        };\n\n        /**\n         * @description Assign values from AJAX response to venue properties\n         * @param {object[]} data\n         * @returns {object} venue\n         */\n        self.fetchData = function(data) {\n            var location = data.response.venue;\n            var venue = {};\n            venue.url = location.canonicalUrl ? location.canonicalUrl : \"#\";\n            venue.name = location.name ? location.name : \"Name not provided\";\n            venue.address = location.location.address ? location.location.address : \"Address not provided\";\n            venue.postalCode = location.location.postalCode ? location.location.postalCode : \"Zipcode not provided\";\n            venue.city = location.location.city ? location.location.city : \"City not provided\";\n            venue.hours = location.popular ? location.popular.timeframes[0].open[0].renderedTime : \"Hours not provided\";\n            return venue;\n\n        };\n\n        /**\n         * @description Creates an array of infowindow strings\n         * @param {object} venue\n         * @returns {array} - Infowindow Strings\n         */\n        self.buildString = function(venue) {\n            var htmlString = '<article class=\"infowindow-text\">' +\n                '<h2><a class=\"venue-link\" href=' + venue.url + '>' +\n                venue.name + '</h2></a>' +\n                '<div class=\"contact-box\"><i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>' +\n                '<address>' + venue.address + ', ' + venue.postalCode + ' ' +\n                venue.city + '</address></div>' +\n                '<div class=\"time-box\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>' +\n                '<p class=\"hours\"> Today: ' + venue.hours + '</p></div></article>';\n            var foursquareString = htmlString + '<div class=\"image-box\"><img class=\"foursquare-img\" src=\"images/foursquare.png\"></div>';\n            return [htmlString, foursquareString];\n        };\n\n        /**\n         * @description AJAX request success callback.\n         * Takes response data to build infowindow string.\n         * @param {object[]} data\n         */\n        self.successCallback = function(data) {\n            var ajaxData = self.fetchData(data);\n            var htmlString = self.buildString(ajaxData)[1];\n            self.infowindow.setContent(htmlString);\n        };\n\n        /**\n         * @description AJAX request failure callback.\n         * Uses hard-coded data to build infowindow string.\n         * @param {object} venue\n         */\n        self.failCallback = function(venue) {\n            var htmlString = self.buildString(venue)[0];\n            self.infowindow.setContent(htmlString);\n        };\n\n\n        /**\n         * @description Builds infowindow string.\n         * @param {object} marker\n         * @param {object} infowindow\n         * @param {object} venue\n         */\n        self.populateInfowindow = function(marker, infowindow, venue) {\n            // Clear infowindow content\n            self.infowindow.setContent('Fetching..');\n\n            // Make AJAX call\n            self.getAJAXdata(venue);\n\n            // Open infowindow with its anchor being the marker.\n            self.openInfoWindow(self.map, marker);\n\n            // Close infowindow on click.\n            self.infowindow.addListener('closeclick', self.closeInfoWindow);\n        };\n\n        /*\n         * @description Make map responsive.\n         */\n        self.resizeMap = function() {\n            var center = self.map.getCenter();\n            google.maps.event.trigger(self.map, \"resize\");\n            self.map.setCenter(center);\n        };\n\n        /**\n         * @description Make map element observable.\n         */\n        self.mapElem = ko.observable(true);\n\n        /**\n         * @description Set map element to false/invisible.\n         */\n        self.mapError = function() {\n            self.mapElem(false);\n        };\n\n    };\n\n    // Create an instance of MapVM\n    app.mapvm = new MapVM();\n\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    /**\n     * @description Custom JQuery FadeIn/FadeOut Binding\n     * http://knockoutjs.com/documentation/custom-bindings.html\n     */\n    ko.bindingHandlers.fadeVisible = {\n        init: function(element, valueAccessor) {\n            // Set the element to be instantly visible/hidden\n            var value = valueAccessor();\n            $(element).toggle(ko.unwrap(value));\n        },\n        update: function(element, valueAccessor) {\n            // Slowly fade the element in or out\n            var value = valueAccessor();\n            ko.unwrap(value) ? $(element).fadeIn('fast') : $(element).fadeOut('fast');\n        }\n    };\n\n    /**\n     * @constructor Section Class\n     */\n    var Section = function(name, id) {\n        this.name = name;\n        this.id = id;\n    };\n\n    /**\n     * @constructor Section View Model\n     * @description Tab Functions\n     */\n    var SectionVM = function() {\n        var self = this;\n\n        // Observable array of sections\n        self.sections = ko.observableArray([\n            new Section(\"Search Venues\", \"venueView\"),\n            new Section(\"Map\", \"mapView\")\n        ]);\n\n        /**\n         * @description Keeps track of chosen section\n         * Set Map Section as chosen onload.\n         */\n        self.chosenSection = ko.observable(self.sections()[1]);\n\n        /**\n         * @description Set click target as current chosen section\n         * Trigger resize map if section is map\n         * https://stackoverflow.com/questions/3782632/google-map-display-from-a-hidden-area?noredirect=1&lq=1\n         */\n        self.activateSection = function(section) {\n            self.chosenSection(section);\n            if (self.chosenSection().name === \"Map\") {\n                app.mapvm.resizeMap();\n            }\n        };\n\n        /**\n         * @description Return true or false if element\n         * matches ID of chosen section\n         * @param {object} element\n         */\n        self.showContent = function(element) {\n            return element === self.chosenSection().id;\n        };\n    };\n\n    // Create an instance of SectionVM\n    app.sectionvm = new SectionVM();\n\n\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n    /**\n     * @consructor Attraction Class\n     */\n    var Attraction = function(data) {\n        this.name = data.name;\n        this.location = {\n            lat: data.location.lat,\n            lng: data.location.lng\n        };\n        this.address = data.address;\n        this.postalCode = data.postalCode;\n        this.city = 'Vienna';\n        this.hours = 'Check website';\n        this.url = data.url;\n        this.foursquareID = data.foursquareID;\n        this.marker = \"\";\n        this.tag = data.tag;\n    };\n\n\n    /**\n     * @consructor Venue ViewModel\n     * @description All venue related properties and methods\n     */\n\n    var VenueVM = function() {\n        var self = this;\n\n        /**\n         * @description Creates an array of Attraction instances from data.js\n         */\n        self.attractionList = ko.observableArray(ko.utils.arrayMap(app.initialPOI, function(attraction) {\n            return new Attraction(attraction);\n        }));\n\n        /**\n         * @description Shows Location on Map\n         * @param {object} venue\n         */\n        self.showLocation = function(venue) {\n            // If map is appended\n            // Go to Map Tab\n            // Trigger marker click event\n            if (app.mapvm.mapElem()) {\n                var marker = venue.marker;\n                app.sectionvm.activateSection(app.sectionvm.sections()[1]);\n                google.maps.event.trigger(marker, 'click');\n            } else {\n                // Return true to enable default link\n                // Behaviour when map is not appended.\n                return true;\n            }\n        };\n\n    };\n\n    // Create an instance of venueVM\n    app.venuevm = new VenueVM();\n\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    /**\n     * @description Search View Model\n     * @constructor\n     */\n    var SearchVM = function() {\n        var self = this;\n\n        // Make input field an observable\n        self.searchTerm = ko.observable('');\n\n\n        /**\n         * @description Clear search field.\n         *\n         */\n        self.clearSearch = function() {\n            return self.searchTerm('');\n        };\n\n        /**\n         * @description Filters locations by name\n         *\n         */\n        self.filteredItems = ko.computed(function() {\n            var filterText = self.searchTerm().toLowerCase();\n            return ko.utils.arrayFilter(app.venuevm.attractionList(), function(venue) {\n\n                // If filter text matches venue name\n                if (venue.name.toLowerCase().indexOf(filterText) >= 0) {\n\n                    // If map is visible, show marker\n                    if (app.mapvm.mapElem()) {\n                        app.mapvm.showMarker(venue.marker);\n                    }\n                    return true;\n                } else {\n\n                    // If map is visible, close infowindow and hide marker\n                    if (app.mapvm.mapElem()) {\n                        app.mapvm.infowindow.close();\n                        app.mapvm.hideMarker(venue.marker);\n                    }\n                    return false;\n                }\n            });\n\n        }, self);\n\n        /**\n         * @description Opens Map View and animates Location\n         * on enter key press if one match is found.\n         */\n        self.returnSearchItem = function() {\n            var venue;\n            var totalVenues = self.filteredItems().length;\n            if (totalVenues === 1) {\n                venue = self.filteredItems()[0];\n                app.venuevm.showLocation(venue);\n            } else {\n                return null;\n            }\n\n        };\n\n        // Make search label observable\n        self.searchLabel = ko.observable('');\n\n        /**\n         * @description Determines input label text\n         */\n        self.searchMessage = ko.computed(function() {\n            return self.filteredItems().length === 0 ? 'Sorry, no matches. Try again.' : 'Filter destinations by venue name';\n        }, self);\n\n        // Clear search button observable\n        self.cancelBtn = ko.observable();\n\n        /**\n         * @description Show or hide clear search button\n         */\n        self.showBtn = ko.computed(function() {\n            if (self.searchTerm() === '') {\n                self.cancelBtn(false);\n            } else {\n                self.cancelBtn(true);\n            }\n        });\n\n    };\n\n    // Create an instance of SearchVM\n    app.searchvm = new SearchVM();\n\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    /**\n     * @consructor ViewModel Class\n     * @description A parent view model to house all view models\n     */\n    var ViewModel = function(){\n        this.mapVM = app.mapvm;\n        this.sectionVM = app.sectionvm;\n        this.venueVM = app.venuevm;\n        this.searchVM = app.searchvm;\n    };\n\n    // Create an instance of parent view model\n    app.vm = new ViewModel();\n\n    // When Document is ready apply bindings to ViewModel\n    $(function() {\n        ko.applyBindings(app.vm);\n\n    });\n\n})(window.app = window.app || {});"]}