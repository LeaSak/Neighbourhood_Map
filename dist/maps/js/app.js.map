{"version":3,"sources":["js/data.js","js/viewmodels/map.js","js/viewmodels/section.js","js/viewmodels/venue.js","js/viewmodels/search.js","js/viewmodels/viewmodel.js"],"names":["app","undefined","initialPOI","name","location","lat","lng","address","postalCode","url","foursquareID","tag","window","MapVM","console","log","self","this","init","mapDiv","document","getElementById","vienna","map","google","maps","Map","center","zoom","mapTypeControl","renderTransitLayer","infowindow","InfoWindow","maxWidth","renderMarkers","vm","searchVM","filteredItems","event","addDomListener","resizeMap","list","forEach","venue","marker","Marker","position","LatLng","title","id","animation","Animation","DROP","addListener","toggleBounceMarker","populateInfowindow","LatLngBounds","extend","transitLayer","TransitLayer","setMap","getAnimation","setAnimation","BOUNCE","setTimeout","showMarker","setVisible","hideMarker","openInfoWindow","open","closeInfoWindow","close","getAJAXdata","foursquareURL_venue","$","ajax","dataType","data","client_id","client_secret","v","fetchData","response","canonicalUrl","city","hours","popular","timeframes","renderedTime","buildString","htmlString","successCallback","ajaxData","setContent","failCallback","done","fail","getCenter","trigger","setCenter","mapElem","ko","observable","mapError","mapvm","bindingHandlers","fadeVisible","element","valueAccessor","value","toggle","unwrap","update","fadeIn","fadeOut","Section","SectionVM","sections","observableArray","chosenSection","activateSection","section","showContent","sectionvm","Attraction","VenueVM","attractionList","utils","arrayMap","attraction","showLocation","venuevm","SearchVM","searchTerm","clearSearch","computed","filterText","toLowerCase","arrayFilter","indexOf","returnSearchItem","length","searchLabel","searchMessage","cancelBtn","showBtn","searchvm","ViewModel","mapVM","sectionVM","venueVM","applyBindings"],"mappings":"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","file":"../../js/app.js","sourcesContent":["(function(app, undefined){\n    'use strict';\n        /*\n         * Stores data for Map Markers\n         * This is the model\n         */\n    app.initialPOI = [\n            {\n                name: 'Dianabad',\n                location: {\n                    lat: 48.214209,\n                    lng: 16.377812\n                },\n                address: 'Lilienbrunngasse 7-9',\n                postalCode: '1020',\n                url: 'http://www.dianabad.at/',\n                foursquareID: '4c8df3ce58668cfa9a96cdec',\n                tag: ['#pirates', '#mermaids']\n            },\n            {\n                name: 'Haus des Meeres - Aqua Terra Zoo',\n                location: {\n                    lat: 48.197731,\n                    lng: 16.352923\n                },\n                address: 'Fritz-Grünbaum-Platz 1',\n                postalCode: '1060',\n                url: 'https://www.haus-des-meeres.at/',\n                foursquareID: '4b7cf243f964a52002aa2fe3',\n                tag: ['#marine biologists', '#crocodile hunters']\n            },\n            {\n                name: 'Haus der Musik',\n                location: {\n                    lat: 48.203787,\n                    lng: 16.373061\n                },\n                address: 'Seilerstätte 30',\n                postalCode: '1010',\n                url: 'http://www.hausdermusik.com/',\n                foursquareID: '4b058895f964a520f5ce22e3',\n                tag: ['#mini mozarts', '#rockstars']\n            },\n            {\n                name: 'Zoom Kindermuseum',\n                location: {\n                    lat: 48.202336,\n                    lng: 16.359377\n                },\n                address:'Museumsplatz 1',\n                postalCode: '1070',\n                url: 'https://www.kindermuseum.at/en',\n                foursquareID: '4bd68e887b1876b03abf8c86',\n                tag: ['#tinkerers', '#artists'],\n            },\n            {\n                name: 'Palmenhaus Schönbrunn',\n                location: {\n                    lat: 48.184550,\n                    lng: 16.302921\n                },\n                address: 'Schlosspark Schönbrunn',\n                postalCode: '1130',\n                url: 'https://www.schoenbrunn.at/ueber-schoenbrunn/schlosspark/rundgang/palmenhaus/',\n                foursquareID: '4d7ce2a38f89224bcaf4ab26',\n                tag: ['#hobby gardeners', '#botanists']\n            },\n            {\n                name: 'Figurentheater Lilarum',\n                location: {\n                    lat: 48.200770,\n                    lng: 16.399158\n                },\n                address:'Göllnergasse 8',\n                postalCode: '1030',\n                url: 'http://lilarum.at/',\n                foursquareID: '4b7e696cf964a52009ec2fe3',\n                tag: ['#puppeteers', '#cabaret artists']\n            },\n            {\n                name: 'Schmetterlinghaus im Burggarten',\n                location: {\n                    lat: 48.205378,\n                    lng: 16.366604\n                },\n                address: 'Palmenhaus Burggarten Hofburg',\n                postalCode: '1010',\n                url:'http://www.schmetterlinghaus.at/',\n                foursquareID: '4edf58459adf1692b4aa18a1',\n                tag: ['#butterflies', '#biologists']\n            },\n            {\n                name: 'wienXtra-cinemagic Kinderkino',\n                location: {\n                    lat: 48.211406,\n                    lng: 16.383912\n                },\n                address: 'Uraniastrasse 1',\n                postalCode: '1010',\n                url: 'http://www.wienxtra.at/cinemagic/',\n                foursquareID: '4c9a689e971676b0de2055e2',\n                tag: ['#film critics', '#movie stars']\n            },\n            {\n                name: 'Dschungel Vienna',\n                location: {\n                    lat: 48.202419,\n                    lng: 16.360220\n                },\n                address:'Museumsplatz 1',\n                postalCode: '1070',\n                url: 'https://www.dschungelwien.at/',\n                foursquareID: '4b87979af964a520acc331e3',\n                tag: ['#drama queens', '#drama kings']\n            },\n            {\n                name: 'Technisches Museum Wien',\n                location: {\n                    lat: 48.190902,\n                    lng: 16.318252\n                },\n                address:'Mariahilfer Strasse 212',\n                postalCode: '1140',\n                url: 'https://www.technischesmuseum.at/',\n                foursquareID: '4b058894f964a520d5ce22e3',\n                tag: ['#engineers', '#scientists']\n            },\n            {\n                name: 'Naturhistorisches Museum',\n                location: {\n                    lat: 48.205276,\n                    lng: 16.359845\n                },\n                address:'Burgring 7',\n                postalCode: '1010',\n                url: 'http://www.nhm-wien.ac.at/en',\n                foursquareID: '4b1699f8f964a520c5ba23e3',\n                tag:['#dinosaur fans', '#history buffs']\n            }\n\n        ];\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    // Map View Model\n    var MapVM = function() {\n        console.log('MapVM');\n        var self = this;\n        self.init = function() {\n\n            self.mapDiv = document.getElementById('map');\n            //create google map and append it to the page\n            self.vienna = { lat: 48.2082, lng: 16.3738 };\n            // Constructor creates a new map - only center and zoom are required.\n            self.map = new google.maps.Map(self.mapDiv, {\n                center: self.vienna,\n                zoom: 13,\n                mapTypeControl: false\n            });\n            // add a transit layer to map\n            self.renderTransitLayer(self.map);\n\n            // Create one infowindow\n            self.infowindow = new google.maps.InfoWindow({\n                maxWidth: 300\n            });\n\n            //Create markers for each location\n            self.renderMarkers(app.vm.searchVM.filteredItems());\n\n            //resize map, tell it to redraw when window is resized\n            google.maps.event.addDomListener(window, 'resize', self.resizeMap);\n        };\n\n        self.renderMarkers = function(list) {\n            list.forEach(function(venue) {\n                // create a marker\n                var marker = new google.maps.Marker({\n                    position: new google.maps.LatLng(\n                        venue.location.lat,\n                        venue.location.lng),\n                    map: self.map,\n                    title: venue.name,\n                    id: venue.foursquareID,\n                    animation: google.maps.Animation.DROP\n                });\n                //assigning marker to venue property\n                venue.marker = marker;\n                marker.addListener('click', function() {\n                    self.toggleBounceMarker(this);\n                    self.populateInfowindow(this, self.infowindow, venue);\n\n                });\n                //create bounds for the map based on the marker position\n                var bounds = new google.maps.LatLngBounds();\n                bounds.extend(marker.position);\n            });\n        };\n\n        self.renderTransitLayer = function(map) {\n            self.transitLayer = new google.maps.TransitLayer();\n            self.transitLayer.setMap(map);\n        };\n\n        self.toggleBounceMarker = function(marker) {\n            if (marker.getAnimation() !== null) {\n                marker.setAnimation(null);\n            } else {\n                marker.setAnimation(google.maps.Animation.BOUNCE);\n                setTimeout(function() {\n                    marker.setAnimation(null);\n                }, 1500);\n            }\n        };\n\n        self.showMarker = function(marker) {\n            if (marker) {\n                marker.setVisible(true);\n            }\n        };\n\n        self.hideMarker = function(marker) {\n            if (marker) {\n                marker.setVisible(false);\n            }\n        };\n\n        //redundant\n        self.openInfoWindow = function(map, marker) {\n            self.infowindow.open(self.map, marker);\n        };\n\n        //redundant\n        self.closeInfoWindow = function() {\n            self.infowindow.close();\n        };\n\n        // make ajax request\n        self.getAJAXdata = function(venue) {\n            var foursquareClientID = 'V3SD0U1WAIJOPXUK4W2AR0DPZXUKFQQL5Y2FXKK4YO25FVX0';\n            var foursquareClientSecret = 'NEH1GYLAFDS2CL5DSBFRO3DENB55KPWAVJE5ERBWQ1MGLD0X';\n            var foursquareVersion = '20170801';\n            var foursquareURL_venue = 'https://api.foursquare.com/v2/venues/' + venue.foursquareID;\n\n            return $.ajax({\n                url: foursquareURL_venue,\n                dataType: \"jsonp\",\n                data: {\n                    client_id: foursquareClientID,\n                    client_secret: foursquareClientSecret,\n                    v: foursquareVersion,\n                }\n            });\n        };\n        // create foursquare location object from data received.\n        self.fetchData = function(data) {\n            var location = data.response.venue;\n            var venue = {};\n            venue.url = location.canonicalUrl ? location.canonicalUrl : \"#\";\n            venue.name = location.name ? location.name : \"Name not provided\";\n            venue.address = location.location.address ? location.location.address : \"Address not provided\";\n            venue.postalCode = location.location.postalCode ? location.location.postalCode : \"Zipcode not provided\";\n            venue.city = location.location.city ? location.location.city : \"City not provided\";\n            venue.hours = location.popular ? location.popular.timeframes[0].open[0].renderedTime : \"Hours not provided\";\n            return venue;\n\n        };\n\n        self.buildString = function(venue) {\n            var htmlString = '<article class=\"infowindow-text\">' +\n                '<h2><a class=\"venue-link\" href=' + venue.url + '>' +\n                venue.name + '</h2></a>' +\n                '<div class=\"contact-box\"><i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>' +\n                '<address>' + venue.address + ', ' + venue.postalCode + ' ' +\n                venue.city + '</address></div>' +\n                '<div class=\"time-box\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>' +\n                '<p> Today: ' + venue.hours + '</p></div></article>';\n            var foursquareString = htmlString + '<div class=\"image-box\"><img class=\"foursquare-img\" src=\"images/foursquare.png\"></div>';\n            return [htmlString, foursquareString];\n        };\n\n        // success callback for infowindow\n        self.successCallback = function(data) {\n            var ajaxData = self.fetchData(data);\n            var htmlString = self.buildString(ajaxData)[1];\n            self.infowindow.setContent(htmlString);\n        };\n        // error callback for infowindow\n        self.failCallback = function(venue) {\n            var htmlString = self.buildString(venue)[0];\n            self.infowindow.setContent(htmlString);\n        };\n\n        // clear infowindow content\n        // make ajax call to foursquare\n        // get venue data and return a venue object\n        // create infowindow string based on ajax results\n        // open infowindow\n        // close infowindow on click\n        // if ajax call errors, use hard-coded location data\n        // for infowindow content\n        self.populateInfowindow = function(marker, infowindow, venue) {\n            self.infowindow.setContent('Fetching..');\n\n            self.getAJAXdata(venue).done(function(data) {\n                self.successCallback(data);\n            });\n\n            self.getAJAXdata(venue).fail(function() {\n                self.failCallback(venue);\n            });\n\n            //open infowindow with its anchor being the marker.\n            self.openInfoWindow(self.map, marker);\n            self.infowindow.addListener('closeclick', self.closeInfoWindow);\n        };\n\n        self.resizeMap = function() {\n            var center = self.map.getCenter();\n            google.maps.event.trigger(self.map, \"resize\");\n            self.map.setCenter(center);\n        };\n\n        // Map Elem observable\n        // Used for error messaging;\n        self.mapElem = ko.observable(true);\n\n        self.mapError = function() {\n            self.mapElem(false);\n        };\n\n    };\n    app.mapvm = new MapVM();\n\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    // http://knockoutjs.com/documentation/custom-bindings.html\n    ko.bindingHandlers.fadeVisible = {\n    init: function(element, valueAccessor) {\n        // Initially set the element to be instantly visible/hidden depending on the value\n        var value = valueAccessor();\n        $(element).toggle(ko.unwrap(value)); // Use \"unwrapObservable\" so we can handle values that may or may not be observable\n    },\n    update: function(element, valueAccessor) {\n        // Whenever the value subsequently changes, slowly fade the element in or out\n        var value = valueAccessor();\n        ko.unwrap(value) ? $(element).fadeIn('fast') : $(element).fadeOut('fast');\n    }\n};\n\n    // Section class\n    var Section = function(name, id) {\n        this.name = name;\n        this.id = id;\n    };\n\n\n    /*\n     * Section View Model of App\n     *\n     */\n    var SectionVM = function() {\n        var self = this;\n        console.log('SectionVM');\n\n        //observable array of sections\n        // sections contain main content\n        self.sections = ko.observableArray([\n            new Section(\"Search Venues\", \"venueView\"),\n            new Section(\"Map\", \"mapView\")\n        ]);\n\n        // Keeps track of which section is selected\n        // Set Map as default open tab\n        self.chosenSection = ko.observable(self.sections()[1]);\n\n        // set click target as current chosen section\n        // trigger resize map if condition met\n        self.activateSection = function(section) {\n            self.chosenSection(section);\n            if (self.chosenSection().name === \"Map\") {\n                app.mapvm.resizeMap();\n            }\n        };\n\n        // this returns true or false if\n        // conditions are met or not met.\n        self.showContent = function(element) {\n            return element === self.chosenSection().id;\n        };\n    };\n\n    // create an instance of SectionVM\n    app.sectionvm = new SectionVM();\n\n\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    /*\n     * Attraction Class constructor\n     * Gets properties from Model\n     */\n    var Attraction = function(data) {\n        this.name = data.name;\n        this.location = {\n            lat: data.location.lat,\n            lng: data.location.lng\n        };\n        this.address = data.address;\n        this.postalCode = data.postalCode;\n        this.city = 'Vienna';\n        this.hours = 'Check website';\n        this.url = data.url;\n        this.foursquareID = data.foursquareID;\n        this.marker = \"\";\n        this.tag = data.tag;\n    };\n\n\n    /*\n     * Venue View Model of App\n     *\n     *\n     */\n\n    var VenueVM = function() {\n        var self = this;\n        console.log('VenueVM');\n        // Creates a ko observable array of location objects\n        self.attractionList = ko.observableArray(ko.utils.arrayMap(app.initialPOI, function(attraction) {\n            return new Attraction(attraction);\n        }));\n        // One line of google\n        // switch to map\n        // click callback function\n        // return true to enable default link\n        // behaviour when map is not available\n        self.showLocation = function(venue) {\n            if (app.mapvm.mapElem()) {\n                var marker = venue.marker;\n                app.sectionvm.activateSection(app.sectionvm.sections()[1]);\n                google.maps.event.trigger(marker, 'click');\n            } else {\n                return true;\n            }\n        };\n\n    };\n\n    // create an instance of venueVM\n    app.venuevm = new VenueVM();\n\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    /*\n     * Search View Model of App\n     *\n     */\n    var SearchVM = function() {\n        var self = this;\n        console.log('SearchVM');\n\n        // make input field an observable\n        self.searchTerm = ko.observable('');\n\n        self.clearSearch = function() {\n            return self.searchTerm('');\n        };\n\n        // return search results for listings in an array\n        // search is based on venue name\n        // if map is shown, hide or show markers, infowindow\n        self.filteredItems = ko.computed(function() {\n            var filterText = self.searchTerm().toLowerCase();\n            return ko.utils.arrayFilter(app.venuevm.attractionList(), function(venue) {\n                if (venue.name.toLowerCase().indexOf(filterText) >= 0) {\n                    if (app.mapvm.mapElem()) {\n                        app.mapvm.showMarker(venue.marker);\n                    }\n\n                    return true;\n                } else {\n                    if (app.mapvm.mapElem()) {\n                        app.mapvm.infowindow.close();\n                        app.mapvm.hideMarker(venue.marker);\n                    }\n                    return false;\n                }\n            });\n\n        }, self);\n\n        // if the filteredItems has one match\n        // let user open map and activate marker on enter key press\n        self.returnSearchItem = function() {\n            var venue;\n            var totalVenues = self.filteredItems().length;\n            if (totalVenues === 1) {\n                venue = self.filteredItems()[0];\n                app.venuevm.showLocation(venue);\n            } else {\n                return null;\n            }\n\n        };\n\n        // make search label observable\n        self.searchLabel = ko.observable('');\n\n        // this computes the search label text\n        self.searchMessage = ko.computed(function() {\n            return self.filteredItems().length === 0 ? 'Sorry, no matches. Try again.' : 'Filter destinations by venue name';\n        }, self);\n\n        // clear search input button\n        self.cancelBtn = ko.observable();\n\n        // show or hide clear search button\n        self.showBtn = ko.computed(function() {\n            if (self.searchTerm() === '') {\n                self.cancelBtn(false);\n            } else {\n                self.cancelBtn(true);\n            }\n        });\n\n    };\n\n    // create an instance of search view model\n    app.searchvm = new SearchVM();\n\n})(window.app = window.app || {});","(function(app, undefined) {\n    'use strict';\n\n    // create a parent view model to house all view models\n    var ViewModel = function(){\n        console.log('ViewModel');\n        this.mapVM = app.mapvm;\n        this.sectionVM = app.sectionvm;\n        this.venueVM = app.venuevm;\n        this.searchVM = app.searchvm;\n    }\n\n    // create an instance of parent view model\n    app.vm = new ViewModel();\n    //ko.applyBindings(app.vm);\n\n    // When Document is ready\n    // apply bindings\n    $(function() {\n        console.log('DOM Content Loaded');\n        ko.applyBindings(app.vm);\n\n    });\n\n\n\n})(window.app = window.app || {});"]}